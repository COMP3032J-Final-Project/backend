Commit ID: [38;5;4m3b729b9dc324ef28dbccd5e226c560860337f318[39m
Change ID: [38;5;5myowmpxkwmyvlyyzsyoyznmsykyrsrrmw[39m
Author   : [38;5;3mmeowking[39m <[38;5;3mmr.meowking@posteo.com[39m> ([38;5;6m2025-04-23 15:26:48[39m)
Committer: [38;5;3mmeowking[39m <[38;5;3mmr.meowking@posteo.com[39m> ([38;5;6m2025-04-23 15:26:48[39m)

[38;5;3m    (no description set)[39m

[38;5;3mModified regular file app/api/endpoints/project/crdt_handler.py:[39m
    ...
[38;5;1m  47[39m [38;5;2m  47[39m:         
[38;5;1m  48[39m [38;5;2m  48[39m:         logger.info(f"Local file updates {'enabled' if should_update_local_files else 'disabled'}")
[38;5;1m  49[39m [38;5;2m  49[39m:         logger.info(f"R2 uploads {'enabled' if self.should_upload_to_r2 else 'disabled'}")
[38;5;1m  50[39m     : [4m[38;5;1m        if self.should_upload_to_r2:[24m[39m
[38;5;1m  51[39m [38;5;2m  50[39m:             logger.info(f"R2 upload minimum interval: {self.r2_upload_min_interval_seconds} seconds")
[38;5;1m  52[39m [38;5;2m  51[39m:         if should_update_local_files:
[38;5;1m  53[39m [38;5;2m  52[39m:             logger.info(f"Temp directory for local files: {self.temp_directory_path}")
    ...
[38;5;3mModified regular file app/models/project/websocket.py:[39m
    ...
[38;5;1m  21[39m [38;5;2m  21[39m: class ProjectAction(str, Enum):
[38;5;1m  22[39m [38;5;2m  22[39m:     DELETE_PROJECT = "delete_project"
[38;5;1m  23[39m [38;5;2m  23[39m:     UPDATE_NAME = "update_name"
     [38;5;2m  24[39m: [4m[38;5;2m    # TODO corresponding payload: "success", "failed"[24m[39m
     [38;5;2m  25[39m: [4m[38;5;2m    INITIALIZE = "initialize" [24m[39m
[38;5;1m  24[39m [38;5;2m  26[39m: 
[38;5;1m  25[39m [38;5;2m  27[39m: 
[38;5;1m  26[39m [38;5;2m  28[39m: class MemberAction(str, Enum):
    ...
[38;5;3mModified regular file app/tasks.py:[39m
    ...
[38;5;1m  11[39m [38;5;2m  11[39m: from app.repositories.project.file import FileDAO
[38;5;1m  12[39m [38;5;2m  12[39m: from app.repositories.project.project import ProjectDAO
[38;5;1m  13[39m [38;5;2m  13[39m: from app.api.endpoints.project.crdt_handler import crdt_handler
     [38;5;2m  14[39m: [4m[38;5;2mfrom app.api.endpoints.project.websocket_handlers import ([24m[39m
     [38;5;2m  15[39m: [4m[38;5;2m    project_general_manager, get_project_channel_name[24m[39m
     [38;5;2m  16[39m: [4m[38;5;2m)[24m[39m
[38;5;1m  14[39m [38;5;2m  17[39m: 
[38;5;1m  15[39m [38;5;2m  18[39m: from app.core.config import settings
[38;5;1m  16[39m [38;5;2m  19[39m: from app.core.background_tasks import background_tasks
     [38;5;2m  20[39m: [4m[38;5;2mfrom app.core.aiocache import cache[24m[39m
     [38;5;2m  21[39m: [4m[38;5;2m[24m[39m
     [38;5;2m  22[39m: [4m[38;5;2mfrom app.models.project.websocket import ([24m[39m
     [38;5;2m  23[39m: [4m[38;5;2m    Message,[24m[39m
     [38;5;2m  24[39m: [4m[38;5;2m    EventScope,[24m[39m
     [38;5;2m  25[39m: [4m[38;5;2m    ProjectAction[24m[39m
     [38;5;2m  26[39m: [4m[38;5;2m)[24m[39m
     [38;5;2m  27[39m: [4m[38;5;2m[24m[39m
[38;5;1m  17[39m [38;5;2m  28[39m: import uuid
[38;5;1m  18[39m [38;5;2m  29[39m: 
     [38;5;2m  30[39m: [4m[38;5;2m[24m[39m
[38;5;1m  19[39m [38;5;2m  31[39m: async def perform_project_initialization(ctx, project_id_str: str, user_id_str: str):
[38;5;1m  20[39m [38;5;2m  32[39m:     """
[38;5;1m  21[39m [38;5;2m  33[39m:     Huey background task to initialize a project.
    ...
[38;5;1m  25[39m [38;5;2m  37[39m:     user_id = uuid.UUID(user_id_str)
[38;5;1m  26[39m [38;5;2m  38[39m:     logger.info(f"Starting background initialization for project {project_id} by user {user_id}")
[38;5;1m  27[39m [38;5;2m  39[39m: 
[38;5;1m  28[39m     : [38;5;1m    [4m# --- Idempotency Check[24m ([4mOptional but Recommended[24m)[4m ---[24m[39m
[38;5;1m  29[39m     : [38;5;1m    # [4mUse[24m [4ma [24mcache [4mkey specific [24mto [4mthe[24m [4mtask[24m [4mexecution state[24m[39m
[38;5;1m  30[39m     : [4m[38;5;1m    # task_cache_key = f"hivey:task:init:{project_id}/running"[24m[39m
[38;5;1m  31[39m     : [4m[38;5;1m    # if await hivey_cache.get(task_cache_key):[24m[39m
[38;5;1m  32[39m     : [4m[38;5;1m    #     logger.warning(f"Initialization task for project {project_id} already running or recently completed.")[24m[39m
[38;5;1m  33[39m     : [4m[38;5;1m    #     return # Or handle as needed[24m[39m
[38;5;1m  34[39m     : [4m[38;5;1m    # await hivey_cache.set(task_cache_key, True, timeout=300) # Set lock with timeout[24m[39m
     [38;5;2m  40[39m: [38;5;2m    [4mproject_channel_name =[24m [4mget_project_channel_name[24m([4mproject_id_str[24m)[4m[24m[39m
     [38;5;2m  41[39m: [38;5;2m[39m
     [38;5;2m  42[39m: [38;5;2m    # [4muse[24m cache to [4mprevent[24m [4mduplicated[24m [4minitialization[24m[39m
[38;5;1m  35[39m [38;5;2m  43[39m: 
[38;5;1m  36[39m [38;5;2m  44[39m:     try:
[38;5;1m  37[39m [38;5;2m  45[39m:         async with async_session() as db:
    ...
[38;5;1m  97[39m [38;5;2m 105[39m: 
[38;5;1m  98[39m [38;5;2m 106[39m:         logger.info(f"Successfully finished background initialization for project {project_id}")
[38;5;1m  99[39m [38;5;2m 107[39m: 
     [38;5;2m 108[39m: [4m[38;5;2m        await project_general_manager.publish(project_channel_name, Message([24m[39m
     [38;5;2m 109[39m: [4m[38;5;2m            scope=EventScope.PROJECT,[24m[39m
     [38;5;2m 110[39m: [4m[38;5;2m            action=ProjectAction.INITIALIZE,[24m[39m
     [38;5;2m 111[39m: [4m[38;5;2m            payload="success",[24m[39m
     [38;5;2m 112[39m: [4m[38;5;2m        ).model_dump_json())[24m[39m
     [38;5;2m 113[39m: [4m[38;5;2m        [24m[39m
[38;5;1m 100[39m [38;5;2m 114[39m:     except Exception as e:
[38;5;1m 101[39m [38;5;2m 115[39m:         logger.error(
[38;5;1m 102[39m [38;5;2m 116[39m:             f"Unhandled error during background initialization for project "
[38;5;1m 103[39m [38;5;2m 117[39m:             f"{project_id}: {e}",
[38;5;1m 104[39m [38;5;2m 118[39m:             exc_info=True
[38;5;1m 105[39m [38;5;2m 119[39m:         )
     [38;5;2m 120[39m: [4m[38;5;2m[24m[39m
     [38;5;2m 121[39m: [4m[38;5;2m        await project_general_manager.publish(project_channel_name, Message([24m[39m
     [38;5;2m 122[39m: [4m[38;5;2m            scope=EventScope.PROJECT,[24m[39m
     [38;5;2m 123[39m: [4m[38;5;2m            action=ProjectAction.INITIALIZE,[24m[39m
     [38;5;2m 124[39m: [4m[38;5;2m            payload="failed",[24m[39m
     [38;5;2m 125[39m: [4m[38;5;2m        ).model_dump_json())[24m[39m
[38;5;1m 106[39m [38;5;2m 126[39m:         
[38;5;1m 107[39m     : [4m[38;5;1m        # Optional: Implement retry logic within Huey's capabilities if needed[24m[39m
[38;5;1m 108[39m     : [4m[38;5;1m        # raise e # Re-raise if you want Huey to potentially retry the task[24m[39m
[38;5;1m 109[39m     : [4m[38;5;1m[24m[39m
[38;5;1m 110[39m     : [4m[38;5;1m    # finally:[24m[39m
[38;5;1m 111[39m     : [4m[38;5;1m    # await hivey_cache.delete(task_cache_key) # Clean up lock[24m[39m
[38;5;1m 112[39m     : [4m[38;5;1m[24m[39m
[38;5;1m 113[39m [38;5;2m 127[39m: saq_settings = {
[38;5;1m 114[39m [38;5;2m 128[39m:     "queue": background_tasks,
[38;5;1m 115[39m [38;5;2m 129[39m:     "functions": [
    ...
